# extract medias with most extreme theta
theta.plot <- theta.plot %>%
arrange(V2)
head(theta.plot$V1,20);tail(theta.plot$V1,20)
# the same for 'delete'
theta.mixed <- theta.plot %>%
filter(delete == 'deleted')
summary(lm(as.numeric(theta.mixed$V2)~theta.mixed$delete_prop))
# the same for 'delete'
theta.mixed <- theta.plot# %>%
summary(lm(as.numeric(theta.mixed$V2)~theta.mixed$delete_prop))
# the same for 'delete'
theta.mixed <- theta.plot %>%
filter(delete == 'deleted')
summary(lm(as.numeric(theta.mixed$V2)~theta.mixed$delete_prop))
# is there such relationship inside the 'mixed' category
theta.mixed <- theta.plot %>%
filter(type == 'mixed')
# the same for 'delete'
theta.mixed <- theta.plot %>%
filter(delete == 'deleted')
# density by group
wf.plot1 <- ggplot(data = theta.plot,aes(x=theta))+
geom_density(aes(color=type,fill=type),alpha=0.3,position='identity',bw=0.6) +
theme_classic()
wf.plot1
# extract the type of account
type <- data %>%
ungroup() %>%
select(media,category) %>%
mutate(value = ifelse(category == 'non_fiction',1,0)) %>%
group_by(media) %>%
mutate(prop = sum(value==1)/(sum(value==1)+sum(value==0))) %>%
unique() %>%
group_by(media) %>%
mutate(type = mean(value)) %>%
mutate(type = factor(type, levels = c(0,0.5,1),labels = c('narrative','mixed','non_fiction'))) %>%
select(media,type,prop) %>%
unique()
theta.plot <- as.data.frame(cbind(docnames(cp.dfm.group2),as.numeric(theta)))
# merge the theta with the type of account
theta.plot <- merge(theta.plot,type,by.x='V1',by.y='media')
# density by group
wf.plot1 <- ggplot(data = theta.plot,aes(x=theta))+
geom_density(aes(color=type,fill=type),alpha=0.3,position='identity',bw=0.6) +
theme_classic()
# histogram by group
wf.plot2 <- ggplot(data = theta.plot,aes(x=theta))+
geom_histogram(aes(color=type,fill=type),bins=10)
# extract medias with most extreme theta
theta.plot <- theta.plot %>%
arrange(V2)
# is there such relationship inside the 'mixed' category
theta.mixed <- theta.plot %>%
filter(type == 'mixed')
summary(lm(as.numeric(theta.mixed$V2)~theta.mixed$prop))
# implement wordfish model
wf <- textmodel_wordfish(cp.dfm.group2, dir = c(22,54))#  direction '方方' to '央视新闻'
# extract the document position
theta <- wf$theta
theta.plot <- as.data.frame(cbind(docnames(cp.dfm.group2),as.numeric(theta)))
# extract the type of account
type <- data %>%
ungroup() %>%
select(media,category) %>%
mutate(value = ifelse(category == 'non_fiction',1,0)) %>%
group_by(media) %>%
mutate(prop = sum(value==1)/(sum(value==1)+sum(value==0))) %>%
unique() %>%
group_by(media) %>%
mutate(type = mean(value)) %>%
mutate(type = factor(type, levels = c(0,0.5,1),labels = c('narrative','mixed','non_fiction'))) %>%
select(media,type,prop) %>%
unique()
# extract is deleted
delete <- data %>%
ungroup() %>%
select(media,is_deleted) %>%
group_by(media) %>%
mutate(delete = max(is_deleted)) %>%
mutate(delete_prop = sum(is_deleted==1)/(sum(is_deleted==1)+sum(is_deleted==0))) %>%
select(media, delete, delete_prop) %>%
unique() %>%
mutate(delete = factor(delete, levels = c(0,1), labels = c('not deleted', 'deleted')))
# merge the theta with the type of account
theta.plot <- merge(theta.plot,type,by.x='V1',by.y='media')
# density by group
wf.plot1 <- ggplot(data = theta.plot,aes(x=theta))+
geom_density(aes(color=type,fill=type),alpha=0.3,position='identity',bw=0.6) +
theme_classic()
# histogram by group
wf.plot2 <- ggplot(data = theta.plot,aes(x=theta))+
geom_histogram(aes(color=type,fill=type),bins=10)
wf.plot2
# density by group
wf.plot1 <- ggplot(data = theta.plot,aes(x=theta))+
geom_density(aes(color=type,fill=type),alpha=0.3,position='identity',bw=0.3) +
theme_classic()
# density by group
ggplot(data = theta.plot,aes(x=theta))+
geom_density(aes(color=type,fill=type),alpha=0.3,position='identity',bw=0.3) +
theme_classic()
# density by group
ggplot(data = theta.plot,aes(x=theta))+
geom_density(aes(color=type,fill=type),alpha=0.3,position='identity',bw=0.4) +
theme_classic()
# density by group
ggplot(data = theta.plot,aes(x=theta))+
geom_density(aes(color=type,fill=type),alpha=0.3,position='identity',bw=0.5) +
theme_classic()
# density by group
wf.plot1 <- ggplot(data = theta.plot,aes(x=theta))+
geom_density(aes(color=type,fill=type),alpha=0.3,position='identity',bw=0.5) +
theme_classic()
# histogram by group
wf.plot2 <- ggplot(data = theta.plot,aes(x=theta))+
geom_histogram(aes(color=type,fill=type),bins=10)
grid.arrange(wf.plot1,wf.plot2,ncol=2)
library(gridExtra)
grid.arrange(wf.plot1,wf.plot2,ncol=2)
# histogram by group
wf.plot2 <- ggplot(data = theta.plot,aes(x=theta))+
geom_histogram(aes(color=type,fill=type),bins=10)+
theme_classic()
grid.arrange(wf.plot1,wf.plot2,ncol=2)
# density by group
wf.plot1 <- ggplot(data = theta.plot,aes(x=theta))+
geom_density(aes(color=type,fill=type),alpha=0.3,position='identity',bw=0.5) +
ggtitle('Smoothed Density by Category')+
theme_classic()
# histogram by group
wf.plot2 <- ggplot(data = theta.plot,aes(x=theta))+
geom_histogram(aes(color=type,fill=type),bins=10)+
ggtitle('Histogram by Category')
theme_classic()
# density by group
wf.plot1 <- ggplot(data = theta.plot,aes(x=theta))+
geom_density(aes(color=type,fill=type),alpha=0.3,position='identity',bw=0.5) +
ggtitle('Smoothed Density by Category')+
theme_classic()
# histogram by group
wf.plot2 <- ggplot(data = theta.plot,aes(x=theta))+
geom_histogram(aes(color=type,fill=type),bins=10)+
ggtitle('Histogram by Category')+
theme_classic()
grid.arrange(wf.plot1,wf.plot2,ncol=2)
# density by group
wf.plot1 <- ggplot(data = theta.plot,aes(x=theta))+
geom_density(aes(color=type,fill=type),alpha=0.1,position='identity',bw=0.5) +
ggtitle('Smoothed Density by Category')+
theme_classic()
# histogram by group
wf.plot2 <- ggplot(data = theta.plot,aes(x=theta))+
geom_histogram(aes(color=type,fill=type),bins=10)+
ggtitle('Histogram by Category')+
theme_classic()
grid.arrange(wf.plot1,wf.plot2,ncol=2)
library(quanteda)
plot(wf)
textplot_wordcloud(wf)
textplot_wordcloud(cp.dfm.group2)
?textplot_wordcloud
textplot_wordcloud(cp.dfm.group2,comparison = T)
?textplot_keyness
?textplot_influence
textplot_scale1d(wf)
?textplot_scale1d
textplot_scale1d(wf,groups = type$type)
type
docnames(cp.dfm.group2)
theta.plot <- as.data.frame(cbind(docnames(cp.dfm.group2),as.numeric(theta)))
# extract the type of account
type <- data %>%
ungroup() %>%
select(media,category) %>%
mutate(value = ifelse(category == 'non_fiction',1,0)) %>%
group_by(media) %>%
mutate(prop = sum(value==1)/(sum(value==1)+sum(value==0))) %>%
unique() %>%
group_by(media) %>%
mutate(type = mean(value)) %>%
mutate(type = factor(type, levels = c(0,0.5,1),labels = c('narrative','mixed','non_fiction'))) %>%
select(media,type,prop) %>%
unique()
# extract is deleted
delete <- data %>%
ungroup() %>%
select(media,is_deleted) %>%
group_by(media) %>%
mutate(delete = max(is_deleted)) %>%
mutate(delete_prop = sum(is_deleted==1)/(sum(is_deleted==1)+sum(is_deleted==0))) %>%
select(media, delete, delete_prop) %>%
unique() %>%
mutate(delete = factor(delete, levels = c(0,1), labels = c('not deleted', 'deleted')))
# merge the theta with the type of account
theta.plot <- merge(theta.plot,type,by.x='V1',by.y='media')
# merge the theta with the type of account
theta.plot <- merge(theta.plot,delete,by.x='V1',by.y='media')
docnames(cp.dfm.group2)
theta.plot$type
theta.plot$media
View(theta.plot)
theta.plot$V1
# textplot
textplot_scale1d(wf, groups = theta.plot$type)
wf.plot1
data.yangshi <- data[which(data$media=='央视新闻'),]
View(data.yangshi)
# get the docnames
docnames(cp.dfm.group2)
# implement wordfish model
wf <- textmodel_wordfish(cp.dfm.group2, dir = c(25,132))#  direction '方方' to '央视新闻'
# extract the document position
theta <- wf$theta
theta.plot <- as.data.frame(cbind(docnames(cp.dfm.group2),as.numeric(theta)))
# extract the type of account
type <- data %>%
ungroup() %>%
select(media,category) %>%
mutate(value = ifelse(category == 'non_fiction',1,0)) %>%
group_by(media) %>%
mutate(prop = sum(value==1)/(sum(value==1)+sum(value==0))) %>%
unique() %>%
group_by(media) %>%
mutate(type = mean(value)) %>%
mutate(type = factor(type, levels = c(0,0.5,1),labels = c('narrative','mixed','non_fiction'))) %>%
select(media,type,prop) %>%
unique()
# extract is deleted
delete <- data %>%
ungroup() %>%
select(media,is_deleted) %>%
group_by(media) %>%
mutate(delete = max(is_deleted)) %>%
mutate(delete_prop = sum(is_deleted==1)/(sum(is_deleted==1)+sum(is_deleted==0))) %>%
select(media, delete, delete_prop) %>%
unique() %>%
mutate(delete = factor(delete, levels = c(0,1), labels = c('not deleted', 'deleted')))
# merge the theta with the type of account
theta.plot <- merge(theta.plot,type,by.x='V1',by.y='media')
# density by group
wf.plot1 <- ggplot(data = theta.plot,aes(x=theta))+
geom_density(aes(color=type,fill=type),alpha=0.1,position='identity',bw=0.5) +
ggtitle('Smoothed Density by Category')+
theme_classic()
# histogram by group
wf.plot2 <- ggplot(data = theta.plot,aes(x=theta))+
geom_histogram(aes(color=type,fill=type),bins=10)+
ggtitle('Histogram by Category')+
theme_classic()
grid.arrange(wf.plot1,wf.plot2,ncol=2)
# merge the theta with the type of account
theta.plot <- merge(theta.plot,delete,by.x='V1',by.y='media')
# density by group
ggplot(data = theta.plot,aes(x=theta))+
geom_density(aes(color=delete,fill=delete),alpha=0.1,position='identity',bw=0.6)
# histogram by group
ggplot(data = theta.plot,aes(x=theta))+
geom_histogram(aes(color=delete,fill=delete),bins=10)
# textplot
textplot_scale1d(wf, groups = theta.plot$type)
textplot_scale1d(wf, groups = theta.plot$delete)
?textplot_wordcloud
remove_number = T,group='category'
# wordcloud plot by category and isdelted
dfm.plot <- dfm(cp,remove = c(stopwords('zh', source='misc'),c('共','字','载','加','功能','介绍','信号','一扫','媒体','新闻','具有','内涵','思考','来源','人群','本期','独立')),
remove_number = T,group='category')
textplot_wordcloud(dfm.plot,comparison = T)
warnins
warnings()
?textplot_wordcloud
textplot_wordcloud(dfm.plot,max_size = 2,min_size = 0.2,comparison = T)
textplot_wordcloud(dfm.plot,max_size = 4,min_size = 0.2,comparison = T,color = c("blue", "red"))
dfm.plot <- dfm(cp,remove = c(stopwords('zh', source='misc'),c('共','字','载','加','功能','介绍','信号','一扫','媒体','新闻','具有','内涵','思考','来源','人群','本期','独立')),
remove_number = T,group='is_deleted')
textplot_wordcloud(dfm.plot,max_size = 4,min_size = 0.2,comparison = T,color = c("blue", "red"))
textplot_wordcloud(dfm.plot,max_size = 4,min_size = 0.2,min_count = 50,max_words = 5000,comparison = T,color = c("blue", "red"))
textplot_wordcloud(dfm.plot,max_size = 4,min_size = 0.2,min_count = 200,max_words = 5000,comparison = T,color = c("blue", "red"))
textplot_wordcloud(dfm.plot,max_size = 4,min_size = 0.2,min_count = 200,max_word=200,comparison = T,color = c("blue", "red"),label = c('not deleted','deleted'))
textplot_wordcloud(dfm.plot,max_size = 4,min_size = 0.2,min_count = 200,comparison = T,color = c("blue", "red"),label = c('not deleted','deleted'))
textplot_wordcloud(dfm.plot,max_size = 4,min_size = 0.2,min_count = 200,max_word=200,comparison = T,color = c("blue", "red"),labels = c('not deleted','deleted'))
textplot_wordcloud(dfm.plot,max_size = 4,min_size = 0.2,min_count = 200,max_word=200,comparison = T,color = c("blue", "red"))
textplot_wordcloud(dfm.plot,max_size = 4,min_size = 0.2,min_count = 200,max_word=300,comparison = T,color = c("blue", "red"))
textplot_wordcloud(dfm.plot,max_size = 4,min_size = 0.5,min_count = 200,max_word=150,comparison = T,color = c("blue", "red"))
warnings()
textplot_wordcloud(dfm.plot,max_size = 2,min_size = 0.2,min_count = 200,max_word=150,comparison = T,color = c("blue", "red"))
textplot_wordcloud(dfm.plot,max_size = 4,min_size = 0.2,min_count = 200,max_word=150,comparison = T,color = c("blue", "red"))
textplot_wordcloud(dfm.plot,max_size = 3,min_size = 0.2,min_count = 200,max_word=150,comparison = T,color = c("blue", "red"))
textplot_wordcloud(dfm.plot,max_size = 3,min_size = 0.2,min_count = 200,max_word=150,comparison = T,color = c("blue", "red"))
# create dfm matrix
cp.dfm.group <- dfm(cp,remove = c(stopwords('zh', source='misc'),c('共','字','载','加','功能','介绍','信号','一扫','媒体','新闻','具有','内涵','思考','来源','人群','本期','独立')),
remove_number=TRUE,group='media')
# wordcloud plot by category and isdelted
dfm.plot <- dfm(cp,remove = c(stopwords('zh', source='misc'),c('共','字','载','加','功能','介绍','信号','一扫','媒体','新闻','具有','内涵','思考','来源','人群','本期','独立')),
remove_number = T,group='category')
textplot_wordcloud(dfm.plot,max_size = 3,min_size = 0.2,min_count = 200,max_word=150,comparison = T,color = c("blue", "red"))
# merge the theta with the type of account
theta.plot <- merge(theta.plot,delete,by.x='V1',by.y='media')
wf.plot3 <- ggplot(data = theta.plot,aes(x=theta))+
geom_density(aes(color=delete,fill=delete),alpha=0.1,position='identity',bw=0.6)+
ggtitle('Smoothed Density by Is Deleted')+
theme_classic()
wf.plot4 <- ggplot(data = theta.plot,aes(x=theta))+
geom_histogram(aes(color=delete,fill=delete),bins=10)+
ggtitle('Histogram by Is Deleted')+
theme_classic()
grid.arrange(wf.plot3,wf.plot4,ncol=2)
theta.plot <- as.data.frame(cbind(docnames(cp.dfm.group2),as.numeric(theta)))
# extract the type of account
type <- data %>%
ungroup() %>%
select(media,category) %>%
mutate(value = ifelse(category == 'non_fiction',1,0)) %>%
group_by(media) %>%
mutate(prop = sum(value==1)/(sum(value==1)+sum(value==0))) %>%
unique() %>%
group_by(media) %>%
mutate(type = mean(value)) %>%
mutate(type = factor(type, levels = c(0,0.5,1),labels = c('narrative','mixed','non_fiction'))) %>%
select(media,type,prop) %>%
unique()
# extract is deleted
delete <- data %>%
ungroup() %>%
select(media,is_deleted) %>%
group_by(media) %>%
mutate(delete = max(is_deleted)) %>%
mutate(delete_prop = sum(is_deleted==1)/(sum(is_deleted==1)+sum(is_deleted==0))) %>%
select(media, delete, delete_prop) %>%
unique() %>%
mutate(delete = factor(delete, levels = c(0,1), labels = c('not deleted', 'deleted')))
# merge the theta with the type of account
theta.plot <- merge(theta.plot,type,by.x='V1',by.y='media')
# merge the theta with the type of account
theta.plot <- merge(theta.plot,delete,by.x='V1',by.y='media')
grid.arrange(wf.plot3,wf.plot4,ncol=2)
wf.plot3
wf.plot4
# extract is deleted
delete <- data %>%
ungroup() %>%
select(media,is_deleted) %>%
group_by(media) %>%
mutate(delete = max(is_deleted)) %>%
mutate(delete_prop = sum(is_deleted==1)/(sum(is_deleted==1)+sum(is_deleted==0))) %>%
select(media, delete, delete_prop) %>%
unique() %>%
mutate(delete = factor(delete, levels = c(0,1), labels = c('not deleted', 'deleted')))
# extract the document position
theta <- wf$theta
theta.plot <- as.data.frame(cbind(docnames(cp.dfm.group2),as.numeric(theta)))
# extract the type of account
type <- data %>%
ungroup() %>%
select(media,category) %>%
mutate(value = ifelse(category == 'non_fiction',1,0)) %>%
group_by(media) %>%
mutate(prop = sum(value==1)/(sum(value==1)+sum(value==0))) %>%
unique() %>%
group_by(media) %>%
mutate(type = mean(value)) %>%
mutate(type = factor(type, levels = c(0,0.5,1),labels = c('narrative','mixed','non_fiction'))) %>%
select(media,type,prop) %>%
unique()
# extract is deleted
delete <- data %>%
ungroup() %>%
select(media,is_deleted) %>%
group_by(media) %>%
mutate(delete = max(is_deleted)) %>%
mutate(delete_prop = sum(is_deleted==1)/(sum(is_deleted==1)+sum(is_deleted==0))) %>%
select(media, delete, delete_prop) %>%
unique() %>%
mutate(delete = factor(delete, levels = c(0,1), labels = c('not deleted', 'deleted')))
# merge the theta with the type of account
theta.plot <- merge(theta.plot,type,by.x='V1',by.y='media')
# density by group
wf.plot1 <- ggplot(data = theta.plot,aes(x=theta))+
geom_density(aes(color=type,fill=type),alpha=0.1,position='identity',bw=0.5) +
ggtitle('Smoothed Density by Category')+
theme_classic()
# histogram by group
wf.plot2 <- ggplot(data = theta.plot,aes(x=theta))+
geom_histogram(aes(color=type,fill=type),bins=10)+
ggtitle('Histogram by Category')+
theme_classic()
grid.arrange(wf.plot1,wf.plot2,ncol=2)
# merge the theta with the type of account
theta.plot <- merge(theta.plot,delete,by.x='V1',by.y='media')
wf.plot3 <- ggplot(data = theta.plot,aes(x=theta))+
geom_density(aes(color=delete,fill=delete),alpha=0.1,position='identity',bw=0.6)+
ggtitle('Smoothed Density by Is Deleted')+
theme_classic()
wf.plot4 <- ggplot(data = theta.plot,aes(x=theta))+
geom_histogram(aes(color=delete,fill=delete),bins=10)+
ggtitle('Histogram by Is Deleted')+
theme_classic()
grid.arrange(wf.plot3,wf.plot4,ncol=2)
# extract the document position
theta <- wf$theta
theta.plot <- as.data.frame(cbind(docnames(cp.dfm.group2),as.numeric(theta)))
# extract the type of account
type <- data %>%
ungroup() %>%
select(media,category) %>%
mutate(value = ifelse(category == 'non_fiction',1,0)) %>%
group_by(media) %>%
mutate(prop = sum(value==1)/(sum(value==1)+sum(value==0))) %>%
unique() %>%
group_by(media) %>%
mutate(type = mean(value)) %>%
mutate(type = factor(type, levels = c(0,0.5,1),labels = c('narrative','mixed','non_fiction'))) %>%
select(media,type,prop) %>%
unique()
# extract is deleted
delete <- data %>%
ungroup() %>%
select(media,is_deleted) %>%
group_by(media) %>%
mutate(delete = max(is_deleted)) %>%
mutate(delete_prop = sum(is_deleted==1)/(sum(is_deleted==1)+sum(is_deleted==0))) %>%
select(media, delete, delete_prop) %>%
unique() %>%
mutate(delete = factor(delete, levels = c(0,1), labels = c('not deleted', 'deleted')))
# merge the theta with the type of account
theta.plot <- merge(theta.plot,type,by.x='V1',by.y='media')
# merge the theta with the type of account
theta.plot <- merge(theta.plot,delete,by.x='V1',by.y='media')
textplot_scale1d(wf,groups = theta.plot$type,highlighted = which(theta.plot$delete=='deleted'))
?textplot_scale1d
textplot_scale1d(wf,groups = theta.plot$type,highlighted = which(theta.plot$delete=='deleted'),highlighted_color = 'red')
which(theta.plot$delete=='deleted')
?textplot_scale1d
textplot_scale1d(wf,groups = theta.plot$type,highlighted = theta.plot$V1[which(theta.plot$delete=='deleted')],highlighted_color = 'red')
theta.plot$V1[which(theta.plot$delete=='deleted')]
textplot_scale1d(wf,groups = theta.plot$type,highlighted = as.vector(theta.plot$V1[which(theta.plot$delete=='deleted')]),highlighted_color = 'red')
textplot_scale1d(wf,groups = theta.plot$type,highlighted = as.character(theta.plot$V1[which(theta.plot$delete=='deleted')]),highlighted_color = 'red')
textplot_scale1d(wf,groups = theta.plot$type,highlighted ='陈冲',highlighted_color = 'red')
?textplot_scale1d
textplot_scale1d(wf,groups = theta.plot$type,margin = 'features', highlighted = as.character(theta.plot$V1[which(theta.plot$delete=='deleted')]),highlighted_color = 'red')
?textplot_scale1d
textplot_scale1d(wf,groups = theta.plot$type,margin = 'documents', highlighted = as.character(theta.plot$V1[which(theta.plot$delete=='deleted')]),highlighted_color = 'red')
# textplot
textplot_scale1d(wf, groups = theta.plot$type)
textplot_scale1d()
?textplot_scale1d
# textplot
textplot_scale1d(wf, groups = theta.plot$type,doclabels = '')
# textplot
textplot_scale1d(wf, groups = theta.plot$type,doclabels = rep('',160))
# textplot
textplot_scale1d(wf, groups = theta.plot$type,doclabels = 1:160)
# textplot
textplot_scale1d(wf, groups = theta.plot$type)
wf.plot1 <- ggplot(data = theta.plot,aes(x=theta))+
geom_density(aes(color=type,fill=type),alpha=0.1,position='identity',bw=0.5) +
ggtitle('Smoothed Density by Category')+
theme_classic()
# histogram by group
wf.plot2 <- ggplot(data = theta.plot,aes(x=theta))+
geom_histogram(aes(color=type,fill=type),bins=10)+
ggtitle('Histogram by Category')+
theme_classic()
grid.arrange(wf.plot2,wf.plot1,ncol=2)
# is there such relationship inside the 'mixed' category
theta.mixed <- theta.plot %>%
filter(type == 'mixed')
summary(lm(as.numeric(theta.mixed$V2)~theta.mixed$prop))
View(theta.plot)
summary(lm(as.numeric(theta.mixed$V2)~theta.mixed$prop))
summary(lm(as.numeric(theta.plot$V2)~theta.plot$prop))
plot(ksmooth(theta.mixed$prop,theta.mixed$V2))
plot(ksmooth(theta.mixed$prop,theta.mixed$V2),type='l')
?ksmooth
plot(ksmooth(theta.mixed$prop,theta.mixed$V2,bandwidth = 0.1),type='l')
plot(ksmooth(theta.mixed$prop,theta.mixed$V2,bandwidth = 0.2),type='l')
ks <- ksmooth(theta.mixed$prop,theta.mixed$V2,bandwidth = 0.2)
ks$y
ks <- ksmooth(theta.mixed$prop,theta.mixed$V2,bandwidth = 0.9)
ks <- ksmooth(theta.mixed$prop,theta.mixed$V2,bandwidth = 0.01)
ks <- ksmooth(theta.mixed$prop,theta.mixed$V2,bandwidth = 0.05)
ks <- ksmooth(theta.mixed$prop,theta.mixed$V2,bandwidth = 0.05)
plot(ks)
ks <- ksmooth(theta.mixed$prop,theta.mixed$V2,bandwidth = 0.01)
plot(ks)
summary(lm(as.numeric(theta.mixed$V2)~theta.mixed$prop))
theta.mixed$x <- log(theta.mixed$prop/(1-theta.mixed$prop))
summary(lm(as.numeric(theta.mixed$V2)~theta.mixed$x))
theta.mixed$V2
max(theta.mixed$V2)
summary(lm(as.numeric(theta.mixed$V2))~theta.mixed$delete_prop))
summary(lm(as.numeric(theta.mixed$V2)~theta.mixed$delete_prop))
wf.plot3 <- ggplot(data = theta.plot,aes(x=theta))+
geom_density(aes(color=delete,fill=delete),alpha=0.1,position='identity',bw=0.6)+
ggtitle('Smoothed Density by Is Deleted')+
theme_classic()
wf.plot4 <- ggplot(data = theta.plot,aes(x=theta))+
geom_histogram(aes(color=delete,fill=delete),bins=10)+
ggtitle('Histogram by Is Deleted')+
theme_classic()
grid.arrange(wf.plot4,wf.plot3,ncol=2)
wf.plot3 <- ggplot(data = theta.plot,aes(x=theta))+
geom_density(aes(color=delete,fill=delete),alpha=0.1,position='identity',bw=0.5)+
ggtitle('Smoothed Density by Is Deleted')+
theme_classic()
wf.plot4 <- ggplot(data = theta.plot,aes(x=theta))+
geom_histogram(aes(color=delete,fill=delete),bins=10)+
ggtitle('Histogram by Is Deleted')+
theme_classic()
grid.arrange(wf.plot4,wf.plot3,ncol=2)
plotModels(Select, pch = c(1, 2,3,4),
legend.position = "bottomright")
